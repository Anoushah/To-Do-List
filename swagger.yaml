openapi: 3.0.0
info:
  title: To-Do List API
  version: 1.0.0
  description: API documentation for the To-Do List application.
servers:
  - url: http://localhost:1250
    description: Server
tags:
  - name: Authentication
    description: Endpoints for user registration and login
  - name: Reports
    description: Endpoints for generating reports and reminders
  - name: Tasks
    description: Endpoints for managing tasks
paths:
  /auth/signup:
    post:
      summary: User registration
      description: Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
              required:
                - email
                - username
                - password
      responses:
        '201':
          description: User registered successfully.
        '400':
          description: Registration failed.
        '409':
          description: Email address already in use.
  /auth/login:
    post:
      summary: User login
      description: Authenticate a user with their credentials.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful.
        '401':
          description: Please sign up first, Email not verified, or Invalid password.
        '500':
          description: Internal server error.
  /reports/average-tasks:
    get:
      summary: Calculate the average number of tasks completed per day.
      description: Calculates the average number of tasks completed per day by a user.
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Average tasks calculation successful.
        '500':
          description: Error calculating average tasks.
  /reports/count-tasks:
    get:
      summary: Calculate the total, completed, and remaining tasks for a user.
      description: Calculates the total, completed, and remaining tasks for a user.
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Task counts calculation successful.
        '500':
          description: Error calculating task counts.
  /reports/max-tasks:
    get:
      summary: Calculate the date with the most completed tasks for a user.
      description: Calculates the date with the most completed tasks for a user.
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Max tasks calculation successful.
        '500':
          description: Error calculating max tasks.
  /reports/opened-tasks:
    get:
      summary: Calculate the number of tasks opened on each day of the week.
      description: Calculates the number of tasks opened on each day of the week by a user.
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Opened tasks calculation successful.
        '500':
          description: Error calculating opened tasks.
  /reports/overdue-tasks:
    get:
      summary: Calculate the number of overdue tasks for a user.
      description: Calculates the number of overdue tasks for a user.
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Overdue tasks calculation successful.
        '500':
          description: Error calculating overdue tasks.
  /reports/similar-tasks:
    get:
      summary: Find and compare similar tasks for a user.
      description: Finds and compares similar tasks for a user.
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Similar tasks calculation successful.
        '500':
          description: Error fetching and comparing tasks.
  /tasks:
    post:
      summary: Create a new task.
      description: Creates a new task for the authenticated user.
      tags:
        - Tasks
      security:
        - bearerAuth: []
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: title
          type: string
          description: The title of the task.
        - in: formData
          name: description
          type: string
          description: The description of the task.
        - in: formData
          name: status
          type: string
          enum: [true, false]
          description: The status of the task (true for completed, false for incomplete).
        - in: formData
          name: dueDateTime
          type: string
          format: date-time
          description: The due date and time of the task.
        - in: formData
          name: file
          type: file
          description: An optional file attachment for the task.
      responses:
        '201':
          description: Task created successfully.
        '401':
          description: Maximum task limit reached.
        '500':
          description: Error creating task.
    get:
      summary: Get all tasks for the authenticated user.
      description: Retrieves all tasks for the authenticated user.
      tags:
        - Tasks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Tasks retrieved successfully.
        '500':
          description: Error fetching tasks.
  /tasks/{taskId}/download:
    get:
      summary: Download a task file.
      description: Downloads the file attachment of a specific task.
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          type: integer
          description: The ID of the task to download the file from.
      responses:
        '200':
          description: File download successful.
        '404':
          description: Task not found.
        '500':
          description: Error downloading file.
  /tasks/{taskNumber}:
    put:
      summary: Update a task.
      description: Updates a specific task for the authenticated user.
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskNumber
          required: true
          type: integer
          description: The task number of the task to update.
        - in: formData
          name: title
          type: string
          description: The updated title of the task.
        - in: formData
          name: description
          type: string
          description: The updated description of the task.
        - in: formData
          name: status
          type: string
          enum: [true, false]
          description: The updated status of the task (true for completed, false for incomplete).
        - in: formData
          name: file
          type: file
          description: An optional file attachment for the task.
      responses:
        '200':
          description: Task updated successfully.
        '404':
          description: Task not found.
        '500':
          description: Error updating task.
    delete:
      summary: Delete a task.
      description: Deletes a specific task for the authenticated user.
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskNumber
          required: true
          type: integer
          description: The task number of the task to delete.
      responses:
        '204':
          description: Task deleted successfully.
        '404':
          description: Task not found.
        '500':
          description: Error deleting task.
security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
